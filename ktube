#!/usr/bin/env python2
# encoding: utf-8


import subprocess
import thread

from sys import argv, exit
from select import select
from evdev import ecodes, InputDevice, list_devices

def play_sound(down = True):
    if down:
        subprocess.check_output(["aplay", "-q", "keydown.wav"])
    else:
        subprocess.check_output(["aplay", "-q", "keyup.wav"])

def eval_event(e):
    if e.type != ecodes.EV_SYN:
        if e.value == 1:
            thread.start_new_thread(play_sound, (True,))
        elif e.value == 0:
            thread.start_new_thread(play_sound, (False,))


if len(argv) >= 2:
    devices = map(InputDevice, list(argv[1:]))
    devices = {dev.fd : dev for dev in devices}
else:
    print("Usage: %s /dev/input/eventX [/dev/input/eventY]" % argv[0])
    devices = map(InputDevice, list_devices())
    print("These are your devices:")
    matches = []
    for dev in devices:
        if "keyboard" in dev.name.lower():
            print('%-20s %-32s %s <<-- This looks like what you need' % (dev.fn, dev.name, dev.phys))
            matches.append(dev.fn)
        else:
            print('%-20s %-32s %s' % (dev.fn, dev.name, dev.phys))
    if len(matches) == 1:
        print("You can try with:")
        print("  %s %s" % (argv[0], matches[0]))
    elif len(matches) > 1:
        print("You can try one of these:")
        for match in matches:
            print("  %s %s" % (argv[0], match))
        print("Note that you can bind ktube to more than one devices, for example:")
        print("  %s %s" % (argv[0], " ".join(matches)))
    exit(0)

while True:
    r, w, e = select(devices, [], [])

    for fd in r:
        for ev in devices[fd].read():
            eval_event(ev)
